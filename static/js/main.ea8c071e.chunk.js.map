{"version":3,"sources":["components/Tabs/Tabs.tsx","functions/getInfoFromTab.ts","App.tsx","index.tsx"],"names":["Tabs","props","tabs","selectedTabId","onTabSelected","selectedTab","find","id","className","map","tab","classNames","href","onClick","handleTabClick","title","content","getInfoFromTab","key","foundTab","App","useState","setSelectedTabId","newTab","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAACC,GACpC,IACEC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,cACAC,EACEH,EADFG,cAGIC,EAAcH,EAAKI,MAAK,qBAAGC,KAAgBJ,MAAkBD,EAAK,GAQxE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKM,UAAU,gBAAf,SACE,6BAEIN,EAAKO,KAAI,SAAAC,GAAG,OACV,oBACEF,UAAWG,IAAW,CACpB,YAAaN,EAAYE,KAAOG,EAAIH,KAEtC,UAAQ,MAJV,SAOE,mBACEK,KAAI,WAAMF,EAAIH,IACd,UAAQ,UACRM,QAAS,kBAtBF,SAACH,GAClBP,IAAkBO,EAAIH,IACxBH,EAAcM,GAoBaI,CAAeJ,IAHhC,SAKGA,EAAIK,SAPFL,EAAIH,WAenB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGH,EAAYW,cClDd,SAASC,EACdV,EACAW,EACAhB,GAEA,IAAMiB,EAAWjB,EAAKI,MAAK,SAAAI,GAAG,OAAIA,EAAIH,KAAOA,KAE7C,GAAIY,EACF,OAAOA,EAASD,GCFb,IAAMhB,EAAO,CAClB,CAAEK,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAG7BI,EAAgB,WAC3B,MAA0CC,mBAAS,SAAnD,mBAAOlB,EAAP,KAAsBmB,EAAtB,KAQA,OACE,sBAAKd,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBS,EAAed,EAAe,QAASD,IAASA,EAAK,GAAGa,SAG9E,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeA,EACfC,cAfe,SAACM,GACpB,IAAMa,EAASb,EAAIH,GAEnBe,EAAiBC,UCjBrBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ea8c071e.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = (props) => {\n  const {\n    tabs,\n    selectedTabId,\n    onTabSelected,\n  } = props;\n\n  const selectedTab = tabs.find(({ id }) => id === selectedTabId) || tabs[0];\n\n  const handleTabClick = (tab: Tab) => {\n    if (selectedTabId !== tab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {\n            tabs.map(tab => (\n              <li\n                className={classNames({\n                  'is-active': selectedTab.id === tab.id,\n                })}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleTabClick(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import { Tab } from '../types/Tab';\n\nexport function getInfoFromTab(\n  id: string,\n  key: keyof Tab,\n  tabs: Tab[],\n): string | undefined {\n  const foundTab = tabs.find(tab => tab.id === id);\n\n  if (foundTab) {\n    return foundTab[key];\n  }\n\n  return undefined;\n}\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\nimport { getInfoFromTab } from './functions/getInfoFromTab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  const selecrNewTab = (tab: Tab): void => {\n    const newTab = tab.id;\n\n    setSelectedTabId(newTab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${getInfoFromTab(selectedTabId, 'title', tabs) || tabs[0].title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={selecrNewTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}