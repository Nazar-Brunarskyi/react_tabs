{"version":3,"sources":["functions/getInfoFromTab.ts","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["getInfoFromTab","id","key","tabs","foundTab","find","tab","Tabs","props","selectedTabId","onTabSelected","isActive","some","className","map","classNames","href","onClick","title","content","App","useState","selectTab","newTab","ReactDOM","render","document","getElementById"],"mappings":"2MAEO,SAASA,EACdC,EACAC,EACAC,GAEA,IAAMC,EAAWD,EAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIL,KAAOA,KAE7C,GAAIG,EACF,OAAOA,EAASF,G,WCCPK,EAAwB,SAACC,GACpC,IACEL,EAGEK,EAHFL,KACAM,EAEED,EAFFC,cACAC,EACEF,EADFE,cAGIC,EAAWR,EAAKS,MAAK,SAAAN,GAAG,OAAIA,EAAIL,KAAOQ,KACzCA,EACAN,EAAK,GAAGF,GAEZ,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKY,UAAU,gBAAf,SACE,6BAEIV,EAAKW,KAAI,SAAAR,GAAG,OACV,oBACEO,UAAWE,IAAW,CAAE,YAAaJ,IAAaL,EAAIL,KACtD,UAAQ,MAFV,SAKE,mBACEe,KAAI,WAAMV,EAAIL,IACd,UAAQ,UACRgB,QAAS,WACHR,IAAkBH,EAAIL,IACxBS,EAAcJ,IALpB,SASGA,EAAIY,SAXFZ,EAAIL,WAmBnB,qBAAKY,UAAU,QAAQ,UAAQ,aAA/B,SAEIb,EAAeS,EAAe,UAAWN,IAASA,EAAK,GAAGgB,cC5CvDhB,EAAO,CAClB,CAAEF,GAAI,QAASiB,MAAO,QAASC,QAAS,eACxC,CAAElB,GAAI,QAASiB,MAAO,QAASC,QAAS,eACxC,CAAElB,GAAI,QAASiB,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAmCC,mBAAS,SAA5C,mBAAOZ,EAAP,KAAsBa,EAAtB,KAQA,OACE,sBAAKT,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBb,EAAeS,EAAe,QAASN,IAASA,EAAK,GAAGe,SAG9E,cAAC,EAAD,CACEf,KAAMA,EACNM,cAAeA,EACfC,cAfe,SAACJ,GACpB,IAAMiB,EAASjB,EAAIL,GAEnBqB,EAAUC,UCjBdC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.69c0cd40.chunk.js","sourcesContent":["import { Tab } from '../types/Tab';\n\nexport function getInfoFromTab(\n  id: string,\n  key: keyof Tab,\n  tabs: Tab[],\n): string | undefined {\n  const foundTab = tabs.find(tab => tab.id === id);\n\n  if (foundTab) {\n    return foundTab[key];\n  }\n\n  return undefined;\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { getInfoFromTab } from '../../functions/getInfoFromTab';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = (props) => {\n  const {\n    tabs,\n    selectedTabId,\n    onTabSelected,\n  } = props;\n\n  const isActive = tabs.some(tab => tab.id === selectedTabId)\n    ? selectedTabId\n    : tabs[0].id;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {\n            tabs.map(tab => (\n              <li\n                className={classNames({ 'is-active': isActive === tab.id })}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (selectedTabId !== tab.id) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {\n          getInfoFromTab(selectedTabId, 'content', tabs) || tabs[0].content\n        }\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\nimport { getInfoFromTab } from './functions/getInfoFromTab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, selectTab] = useState('tab-1');\n\n  const selecrNewTab = (tab: Tab): void => {\n    const newTab = tab.id;\n\n    selectTab(newTab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${getInfoFromTab(selectedTabId, 'title', tabs) || tabs[0].title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={selecrNewTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}